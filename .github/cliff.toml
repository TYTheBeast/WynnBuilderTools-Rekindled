# git-cliff
# https://git-cliff.org/docs/configuration

[changelog]
# template for the changelog header
header = """
# Changelog\n
All notable changes to this project will be documented in this file.\n
"""
# template for the changelog body
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim}}
    {% for commit in commits %}
        - {% if commit.scope %}*({{ commit.scope }})* {% endif %}\
        {% if commit.breaking %}[**breaking**] {% endif %}\
        {{ commit.message | upper_first | replace(from="\n", to="; ") }} \
        - by **@{{ commit.committer.name }}** ({{ commit.id }})
    {% endfor %}
{% endfor %}\n
"""
# template for the changelog footer
footer = """
<!-- generated by git-cliff -->
"""
# remove the leading and trailing whitespace
trim = true

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = false
# process each line of a commit as an individual commit
split_commits = false

# regex for parsing and grouping commits
commit_parsers = [
    # A new feature
    { message = "^feat", group = "🚀 Features" },
    # A bug fix
    { message = "^fix", group = "🐛 Bug Fixes" },
    # Documentation only changes
    { message = "^docs", group = "📝 Documentation" },
    # Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
    { message = "^style", group = "🎨 Style Changes" },
    # A code change that neither fixes a bug nor adds a feature
    { message = "^refactor", group = "🔨 Code Refactoring" },
    # A code change that improves performance
    { message = "^perf", group = "⚡️ Performance Improvements" },
    # Adding missing tests or correcting existing tests
    { message = "^test", group = "🧪 Tests" },
    # Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)
    { message = "^build", group = "🔧 Build System Changes" },
    # Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)
    { message = "^ci", group = "🔄 Continuous Integration" },
    # Other changes that don't modify src or test files
    { message = "^chore", group = "👻 Maintenance" },
    # Reverts a previous commit
    { message = "^revert", group = "⏪ Reverts" },
    { message = ".*", group = "📦 Other Changes" },
]

# filter out the commits that are not matched by commit parsers
filter_commits = false
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "oldest"

# postprocessors (optional)
postprocessors = [
    # { pattern = '<REPO>', replace = "https://github.com/orhun/git-cliff" }, # replace repository URL
]

# output file path (optional)
# output = "CHANGELOG.md"
